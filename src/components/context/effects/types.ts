// Define the type for the context state
export type EffectsContextType = {
    modalBeingViewed: boolean;
    setModalBeingViewed: (value: boolean) => void;
    userHasPausedEffects: boolean;
    setUserHasPausedEffects: (value: boolean) => void;
    noiseOpacity: number;
    setNoiseOpacity: (value: number) => void;
    bloomOpacity: number;
    setBloomOpacity: (value: number) => void;
    brightness: number;
    setBrightness: (value: number) => void;
    isFlickering: boolean;
    setIsFlickering: (value: boolean) => void;
    flickerStrength: number;
    setFlickerStrength: (value: number) => void;
    dizzinessEnabled: boolean;
    setDizzinessEnabled: (value: boolean) => void;
    dizzinessFrequency: number;
    setDizzinessFrequency: (value: number) => void;
    dizzinessAmplitude: number;
    setDizzinessAmplitude: (value: number) => void;
    smallEyeFloatersEnabled: boolean;
    setSmallEyeFloatersEnabled: (value: boolean) => void;
    smallEyeFloatersCount: number;
    setSmallEyeFloatersCount: (value: number) => void;
    smallEyeFloatersTransparency: number;
    setSmallEyeFloatersTransparency: (value: number) => void;
    smallEyeFloatersSize: number;
    setSmallEyeFloatersSize: (value: number) => void;
    smallEyeFloatersColor: number;
    setSmallEyeFloatersColor: (value: number) => void;
    largeEyeFloatersEnabled: boolean;
    setLargeEyeFloatersEnabled: (value: boolean) => void;
    largeEyeFloatersCount: number;
    setLargeEyeFloatersCount: (value: number) => void;
    largeEyeFloatersTransparency: number;
    setLargeEyeFloatersTransparency: (value: number) => void;
    largeEyeFloatersSize: number;
    setLargeEyeFloatersSize: (value: number) => void;
    largeEyeFloatersColor: number;
    setLargeEyeFloatersColor: (value: number) => void;
    blurEnabled: boolean;
    setBlurEnabled: (value: boolean) => void;
    blurStrength: number;
    setBlurStrength: (value: number) => void;
    vignetteStrength: number;
    setVignetteStrength: (value: number) => void;
    showAfterimages: boolean;
    setShowAfterimages: (value: boolean) => void;

    resetAllEffectsToDefault: () => void;
    usePreviousConfig: (config: {[key: string]: string}) => void;
};

export type DefaultEffectsValuesType = {
    noiseOpacity: number;
    bloomOpacity: number;
    brightness: number;
    isFlickering: boolean;
    flickerStrength: number;
    dizzinessEnabled: boolean;
    dizzinessFrequency: number;
    dizzinessAmplitude: number;
    smallEyeFloatersEnabled: boolean;
    smallEyeFloatersCount: number;
    smallEyeFloatersTransparency: number;
    smallEyeFloatersSize: number;
    smallEyeFloatersColor: number;
    largeEyeFloatersEnabled: boolean;
    largeEyeFloatersCount: number;
    largeEyeFloatersTransparency: number;
    largeEyeFloatersSize: number;
    largeEyeFloatersColor: number;
    blurEnabled: boolean;
    blurStrength: number;
    vignetteStrength: number;
};
